4,5c4,54
<      +                  p,q,r,t,z)
<       integer n, itermax, iters, info
---
>      +                  p,q,r,t,z,
>      1     indfree,
>      1     IPITER, IPN, NIND, M, NORIG, XORIG, CSCALE, IVAR,
>      1     NFIX, IFIX, SOFLAG, C,
>      1     NLB, ILB, NUB, IUB, S_L, S_U,
>      1     KCONSTR, LRS, RS, LIS, IS, LRW, RW, LIW, IW, IERR, EV_F,
>      1     EV_C, EV_G, EV_A, EV_H, EV_HLV, EV_HOV, EV_HCV, DAT, IDAT)
>       IMPLICIT NONE
>       integer n
>       integer indfree(n)
>       integer IPITER
>       integer IPN
>       integer NIND
>       integer M
>       integer NORIG
>       double precision XORIG(NORIG)
>       double precision CSCALE(*)
>       integer IVAR(IPN)
>       integer NFIX
>       integer IFIX(NFIX)
>       logical SOFLAG
>       double precision C(M)
>       integer NLB
>       integer ILB(NLB)
>       integer NUB
>       integer IUB(NUB)
>       double precision S_L(NLB)
>       double precision S_U(NUB)
>       integer KCONSTR(6)
>       integer LRS
>       double precision RS(LRS)
>       integer LIS
>       integer IS(LIS)
>       integer LRW
>       double precision RW(LRW)
>       integer LIW
>       integer IW(LIW)
>       integer IERR
>       external EV_F
>       external EV_C
>       external EV_G
>       external EV_A
>       external EV_H
>       external EV_HLV
>       external EV_HOV
>       external EV_HCV
>       double precision DAT(*)
>       integer IDAT(*)
> 
>       integer itermax, iters, info
> C      integer n, itermax, iters, info
192a242,247
> CAWAE
>       integer p_rwend, p_iwend
>       integer p_vin, p_vout
> 
>       include 'IPOPT.INC'
> 
196a252,266
>       p_rwend = 0
>       p_iwend = 0
>       if( QTRONHESS.eq.0 ) then
>          p_vin   = p_rwend
>          p_vout  = p_vin + IPN
>          p_rwend = p_vout + IPN
>          if( p_rwend.gt.LRW ) then
>             IERR = 98
>             return
>          endif
>       else
>          p_vin   = 0
>          p_vout  = 0
>       endif
> 
199,201c269,273
<       do i = 1, n
<          w(i) = zero
<       end do
---
> CORIG
> C      do i = 1, n
> C         w(i) = zero
> C      end do
>       call DCOPY(n,zero,0,w,1)
208c280
<       call dscal(n,-one,t,1)         
---
>       call dscal(n,-one,t,1)
210c282,284
<       call dstrsol(n,l,ldiag,lcol_ptr,lrow_ind,r,'N')
---
>       if( QTRONHESS.eq.2 ) then
>          call dstrsol(n,l,ldiag,lcol_ptr,lrow_ind,r,'N')
>       endif
234c308,310
<          call dstrsol(n,l,ldiag,lcol_ptr,lrow_ind,z,'T')
---
>          if( QTRONHESS.eq.2 ) then
>             call dstrsol(n,l,ldiag,lcol_ptr,lrow_ind,z,'T')
>          endif
239c315,333
<          call dssyax(n,a,adiag,acol_ptr,arow_ind,z,q)
---
>          if( QTRONHESS.ne.0 ) then
>             call dssyax(n,a,adiag,acol_ptr,arow_ind,z,q)
>          else
>             call DCOPY(IPN, zero, 0, RW(p_vin+1), 1)
>             do i = 1, n
>                RW(p_vin+indfree(i)) = z(i)
>             enddo
>             call RES_HV(IPITER, IPN, NIND, M, NORIG, XORIG, CSCALE,
>      1           IVAR, NFIX, IFIX, SOFLAG, C, RW(p_vin+1), RW(p_vout+1),
>      1           NLB, ILB, NUB, IUB, S_L, S_U,
>      1           KCONSTR, LRS, RS, LIS, IS, LRW-p_rwend, RW(p_rwend+1),
>      1           LIW-p_iwend, IW(p_iwend+1), IERR, EV_F, EV_C, EV_G,
>      1           EV_A, EV_H, EV_HLV, EV_HOV, EV_HCV, DAT, IDAT)
>             if( IERR.ne.0 ) return
>             do i = 1, n
>                q(i) = RW(p_vout+indfree(i))
>             enddo
>          endif
> 
241c335,337
<          call dstrsol(n,l,ldiag,lcol_ptr,lrow_ind,q,'N')
---
>          if( QTRONHESS.eq.2 ) then
>             call dstrsol(n,l,ldiag,lcol_ptr,lrow_ind,q,'N')
>          endif
301c397,399
<       iters = itmax
---
> CTELLMORE
> C      iters = itmax
>       iters = itermax
